NOTES (JK):
-  FIGURE OUT COFFEESCRIPT VS. JAVASCRIPT




ALPHA API USAGE DOCUMENT

Content Type :
   JSON

REQUESTS
---------------------------------------------------------
=>Sending basic GET Request: 
 $.ajax({
        method: 'GET',
        url: 'URL',
    }).done(function(response) {});

=>Sending GET Requests where Authorization required: 
	$.ajax({
        method: 'GET',
        url: 'URL',
        headers: {
            "user-token": localStorage.auth_token
        }
    }).done(function(response) {});

=>Sending basic POST requests: 
	$.ajax({
        method: 'POST',
        url: 'URL',
        data: {data}
    });

=>Sending POST Requests where Authorization is required:
	$.ajax({
        method: 'POST',
        url: 'URL',
        data: {data},
        headers: {
          "user-token": localStorage.auth_token
        }
    });

=>Sending DELETE Requests where Authorization required:	 
	$.ajax({
        method: 'DELETE',
        url: 'URL',
        headers: {
          "user-token": localStorage.auth_token
        }
    });

   
API REQUEST ROUTES:
--------------------------------------------------------------
Surveys
--------------------------------------------------------------
ALL REQUIRE AUTHENTICATION 
> Sending survey answer
   url: http://localhost:3000/api/v1/surveys.json
   method: POST
   data required: 
      {option[text]
      }
    Example response object: 
      {
        "success": true,
        "response": "Good",
        "created_at": "2014-02-12T18:26:51.000-05:00",
        "response_count": 3
      }  
    Example failed object: 
    

> Get survey results
   url: http://localhost:3000/api/v1/surveys.json
   method: GET
   AUTHENTICATION REQUIRED
   Example response object:
         {answers, question, options}
         {
        "answers": [
            {
                "id": 1,
                "attempt_id": 1,
                "question_id": 1,
                "option_id": 1,
                "correct": false,
                "created_at": "2014-02-12T18:56:36.000-05:00",
                "updated_at": "2014-02-12T18:56:44.000-05:00"
            },
            {
                "id": 2,
                "attempt_id": 2,
                "question_id": 1,
                "option_id": 1,
                "correct": false,
                "created_at": "2014-02-12T22:21:26.000-05:00",
                "updated_at": "2014-02-12T22:21:26.000-05:00"
            }
        ],
        "question": {
            "id": 1,
            "survey_id": 1,
            "text": "How has business been going over the past week?",
            "created_at": "2014-02-12T18:26:51.000-05:00",
            "updated_at": "2014-02-12T18:26:51.000-05:00"
        },
        "options": [
            {
                "id": 1,
                "question_id": 1,
                "weight": 0,
                "text": "Good",
                "correct": null,
                "created_at": "2014-02-12T18:26:51.000-05:00",
                "updated_at": "2014-02-12T18:26:51.000-05:00"
            },
            {
                "id": 2,
                "question_id": 1,
                "weight": 0,
                "text": "Bad",
                "correct": null,
                "created_at": "2014-02-12T18:26:51.000-05:00",
                "updated_at": "2014-02-12T18:26:51.000-05:00"
            }
        ]
      }   
    Failed response object: 
      {
        "errors": [
        "Invalid login credentials"
         ]
      }

USERS
--------------------------------------------------------------
=> listing users
   url: http://localhost:3000/api/v1/users
   method: GET
   AUTHENTICATION REQUIRED
   Example response object:
	   {Object1, Object2, ...}
     Object1: 
     {
        "id": 1,
        "first_name": "Tim",
        "last_name": null,
        "created_at": "2014-02-11T08:39:43.000-05:00",
        "email": "tim@roundview.co",
        "sign_in_count": 51,
        "current_sign_in_at": "2014-02-11T12:27:03.000-05:00",
        "last_sign_in_at": "2014-02-11T12:23:18.000-05:00",
        "business_name": "Roundview"
    	}
    Failed response object: 
      {
      "error": "You need to sign in or sign up before continuing."
      }

=> Retrieving User detail
  url: http://localhost:3000/api/v1/users/:id 
  method: GET
  AUTHENTICATION REQUIRED
  Example response object:
     {
        "id": 1,
        "first_name": "Tim",
        "last_name": null,
        "created_at": "2014-02-11T08:39:43.000-05:00",
        "email": "tim@roundview.co",
        "sign_in_count": 51,
        "current_sign_in_at": "2014-02-11T12:27:03.000-05:00",
        "last_sign_in_at": "2014-02-11T12:23:18.000-05:00",
        "business_name": "Roundview"
      }
  Failed response object: 
      {
      "error": "You need to sign in or sign up before continuing."
      }    

=> creating users
   url: http://localhost:3000/api/v1/users
   method: POST
   data required: 
      {user: 
          first_name
          last_name
          email
          password
          business_name
      }
    Example response object: 
      {
        "success": true,
        "auth_token": "pFi5h7SQsQo3fGNt_jRN",
        "email": "tim2@roundview.co"
      }   
    Example failed object: 
    {
      "email": [
          "can't be blank"
      ],
      "password": [
          "can't be blank"
      ]
    }

=> Updating User info 
  url: http://localhost:3000/api/v1/users/:id 
  method: PUT
  AUTHENTICATION REQUIRED
  Example response object:
    {
      "id": 12,
      "first_name": "Tim",
      "last_name": null,
      "created_at": "2014-02-11T14:53:23.000-05:00",
      "email": "tasdimsdf2@roundfdview.codsf",
      "sign_in_count": 15,
      "current_sign_in_at": "2014-02-11T14:57:45.000-05:00",
      "last_sign_in_at": "2014-02-11T14:57:17.000-05:00",
      "authentication_token": "yBuEspDKFz7auLjFV9dt",
      "business_name": null
    }
  Example failed object:
    {
    "errors": [
        "Invalid login credentials"
      ]
    }
  
=> Deleting User 
  url: http://localhost:3000/api/v1/users/:id 
  method: DELETE
  AUTHENTICATION REQUIRED 
  Example response object: 
    {
    "success": true,
    "message": "User deleted"
    }

CONVERSATIONS
--------------------------------------------------------------
=> pull all conversations
   url: http://localhost:3000/api/v1/conversations
   method: GET
   AUTHENTICATION REQUIRED
   Example response object:
     {Object1, Object2, ...}
     Object1: 
     {
        "id": 5,
        "content": "woohoo",
        "created_at": "2014-02-11T12:20:10.000-05:00",
        "user": {
            "id": 1,
            "first_name": "Tim",
            "last_name": null,
            "business_name": null
        }
    },
    Failed response object: 
      {
      "error": "You need to sign in or sign up before continuing."
      } 

=> creating conversation post
   url: http://localhost:3000/api/v1/conversations
   method: POST
   AUTHENTICATION REQUIRED
   data required: 
      {conversation: 
          content
      }
    Example response object: 
      {
          "id": 6,
          "content": "this is my test post",
          "user_id": 1,
          "created_at": "2014-02-11T14:03:37.898-05:00",
          "updated_at": "2014-02-11T14:03:37.898-05:00"
      } 
    Example failed object: 
    {
      "error": "You need to sign in or sign up before continuing."
    }
  
=> Deleting conversation post
  url: http://localhost:3000/api/v1/conversations/:id
  method: DELETE
  AUTHENTICATION REQUIRED
  Example response object: 
    {
      "success": true,
      "message": "Post deleted"
    }
  Example failed object: 
  {
    "errors": [
        "Invalid login credentials"
    ]
  }


SESSIONS (SIGN-IN/OUT)
--------------------------------------------------------------
=> Sign-in 
   url: http://localhost:3000/api/v1/users/sign_in
   method: POST
   AUTHENTICATION REQUIRED
   data required: 
      {user: 
          email
          password
      }
   Example response object:
     {
        "success": true,
        "auth_token": "WLBsxw5Zb5h6F-moBcbo",
        "email": "tim@roundview.co"
      }
    Failed response object: 
      {
        "success": false,
        "message": "Error with your login or password"    
      }

=> Sign-out
   url: http://localhost:3000/api/v1/users/sign_out
   method: DELETE
   Example response object: 
      {
        "success": true,
        "message": "Sign out successful"    
      }

= SURVEY SET-UP
my_survey = Survey::Survey.new do |survey|
  survey.name = "Business Pulse" 
  survey.description = "How business is going"
  survey.attempts_number = 1
  survey.active = true
end


question_1 = Survey::Question.new do |question|
  question.text = 'How has business been going over the past week?'
  question.options = [
    Survey::Option.new(:text => 'Good'),
    Survey::Option.new(:text => 'Bad')
  ]
end

my_survey.questions = [question_1]
my_survey.save!



-------------------=======================

attempt = Survey::Attempt.new(:survey => my_survey, :participant => tim)
answer_1 = Survey::Answer.new(:option => question_1.options.first, :question => question_1)
attempt.answers = [answer_1]
attempt.save


:survey => my_survey, :participant => tim, :option => question_1.options.first